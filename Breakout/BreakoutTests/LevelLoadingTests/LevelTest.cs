using NUnit.Framework;
using System.Collections.Generic;
using DIKUArcade.GUI;
using Breakout.Levels;

namespace BreakoutTests {

    [TestFixture]
    public class LevelTest {

        /// <summary>
        /// 
        /// </summary>
        [SetUp]
        public void Setup() {}


        [Test]
        public void TestBlockGeneration() {
            Window.CreateOpenGLContext();

            char[,] map = {{
                    '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}, {
                    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'}};
            Dictionary<string, string> meta = new Dictionary<string, string>(){{
                    "Time", "100"}, {
                    "Name", "LEVEL 1"}};
            Dictionary<string, string> legend = new Dictionary<string, string>(){{
                    "1", "orange-block.png"}};

            Level level = new Level(map, meta, legend);

            int expected = 12;
            Assert.AreEqual(expected, level.CountItems());
        }
    }

}